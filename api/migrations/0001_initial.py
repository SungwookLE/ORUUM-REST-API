# Generated by Django 4.0 on 2022-04-12 14:59

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Stock_List',
            fields=[
                ('ticker', models.CharField(default='', help_text='Ticker(Symbol)', max_length=50, primary_key=True, serialize=False, unique=True, verbose_name='ticker')),
                ('update_day', models.DateField(default=datetime.datetime.today, help_text='업데이트 날짜', verbose_name='update_day')),
                ('name_english', models.CharField(default='', help_text='주식명(영어)', max_length=50, verbose_name='name_english')),
                ('name_korea', models.CharField(default='', help_text='주식명(한국어)', max_length=50, verbose_name='name_korea')),
                ('market', models.CharField(default='', help_text='상장사', max_length=50, verbose_name='market')),
                ('price', models.FloatField(default=0, help_text='주가', verbose_name='price')),
                ('price_open', models.FloatField(default=0, help_text='시가', verbose_name='price_open')),
                ('prevclose', models.FloatField(default=0, help_text='전일가', verbose_name='prevclose')),
                ('price_high', models.FloatField(default=0, help_text='고가', verbose_name='price_high')),
                ('price_low', models.FloatField(default=0, help_text='저가', verbose_name='price_low')),
                ('volume', models.FloatField(default=0, help_text='거래량', verbose_name='volume')),
                ('update_dt', models.DateTimeField(auto_now=True, verbose_name='update_dt')),
                ('create_dt', models.DateTimeField(auto_now_add=True, verbose_name='create_dt')),
            ],
        ),
        migrations.CreateModel(
            name='User_List',
            fields=[
                ('id_user', models.BigAutoField(help_text='id_user_list', primary_key=True, serialize=False, unique=True)),
                ('email_address', models.CharField(default='', help_text='메일주소', max_length=50, unique=True, verbose_name='email_address')),
                ('first_name', models.CharField(default='', help_text='이름', max_length=50, verbose_name='first_name')),
                ('last_name', models.CharField(default='', help_text='성', max_length=50, verbose_name='last_name')),
                ('update_dt', models.DateTimeField(auto_now=True, verbose_name='update_dt')),
                ('create_dt', models.DateTimeField(auto_now_add=True, verbose_name='create_dt')),
            ],
        ),
        migrations.CreateModel(
            name='User_Portfolio',
            fields=[
                ('id', models.BigAutoField(help_text='id_user_portfolio', primary_key=True, serialize=False)),
                ('number_stock', models.IntegerField(default=0, help_text='보유수량', verbose_name='number_stock')),
                ('average_price', models.FloatField(default=0, help_text='평균매입가', verbose_name='average_price')),
                ('price_earning_ratio', models.FloatField(default=0, help_text='주가수익률', verbose_name='price_earning_ratio')),
                ('price_return_won', models.FloatField(default=0, help_text='수익금(원)', verbose_name='price_return_won')),
                ('price_return_dollar', models.FloatField(default=0, help_text='수익금(달러)', verbose_name='price_return_dollar')),
                ('update_dt', models.DateTimeField(auto_now=True, verbose_name='update_dt')),
                ('create_dt', models.DateTimeField(auto_now_add=True, verbose_name='create_dt')),
                ('id_user', models.ForeignKey(db_column='id_user', on_delete=django.db.models.deletion.CASCADE, related_name='user_portfolio', to='api.user_list')),
                ('ticker', models.ForeignKey(db_column='ticker', on_delete=django.db.models.deletion.CASCADE, related_name='user_portfolio', to='api.stock_list')),
            ],
        ),
        migrations.CreateModel(
            name='User_Interest',
            fields=[
                ('id', models.BigAutoField(help_text='id_user_interest', primary_key=True, serialize=False)),
                ('update_dt', models.DateTimeField(auto_now=True, verbose_name='update_dt')),
                ('create_dt', models.DateTimeField(auto_now_add=True, verbose_name='create_dt')),
                ('id_user', models.ForeignKey(db_column='id_user', on_delete=django.db.models.deletion.CASCADE, related_name='user_interest', to='api.user_list')),
                ('ticker', models.ForeignKey(db_column='ticker', on_delete=django.db.models.deletion.CASCADE, related_name='user_interest', to='api.stock_list')),
            ],
        ),
        migrations.CreateModel(
            name='Stock_Price_History',
            fields=[
                ('id', models.BigAutoField(help_text='id_stock_price_history', primary_key=True, serialize=False)),
                ('update_day', models.DateField(default=datetime.datetime.today, help_text='날짜', verbose_name='update_day')),
                ('price_open', models.FloatField(default=0, help_text='시가', verbose_name='price_open')),
                ('price_high', models.FloatField(default=0, help_text='고가', verbose_name='price_high')),
                ('price_low', models.FloatField(default=0, help_text='저가', verbose_name='price_low')),
                ('price_close', models.FloatField(default=0, help_text='종가', verbose_name='price_close')),
                ('adj_close', models.FloatField(default=0, help_text='조정 종가', verbose_name='adj_close')),
                ('volume', models.FloatField(default=0, help_text='거래량', verbose_name='volume')),
                ('splits', models.FloatField(blank=True, help_text='주식분할 내역', null=True, verbose_name='spits')),
                ('dividends', models.FloatField(blank=True, help_text='배당 내역', null=True, verbose_name='dividends')),
                ('update_dt', models.DateTimeField(auto_now=True, verbose_name='update_dt')),
                ('create_dt', models.DateTimeField(auto_now_add=True, verbose_name='create_dt')),
                ('ticker', models.ForeignKey(db_column='ticker', on_delete=django.db.models.deletion.CASCADE, related_name='stockhistory', to='api.stock_list')),
            ],
        ),
        migrations.CreateModel(
            name='Stock_Information_History',
            fields=[
                ('id', models.BigAutoField(help_text='id_stock_information_history', primary_key=True, serialize=False)),
                ('total_assets', models.FloatField(default=0, help_text='자산총계', verbose_name='total_assets')),
                ('curruent_assets', models.FloatField(default=0, help_text='유동자산', verbose_name='curruent_assets')),
                ('inventory', models.FloatField(default=0, help_text='재고자산', verbose_name='inventory')),
                ('quick_assets', models.FloatField(default=0, help_text='당좌자산', verbose_name='quick_assets')),
                ('non_current_assets', models.FloatField(default=0, help_text='비유동자산', verbose_name='non_current_assets')),
                ('investments', models.FloatField(default=0, help_text='투자자산', verbose_name='investments')),
                ('tagible_assets', models.FloatField(default=0, help_text='유형자산', verbose_name='tagible_assets')),
                ('liabilities', models.FloatField(default=0, help_text='부채', verbose_name='liabilities')),
                ('current_liabilities', models.FloatField(default=0, help_text='유동부채', verbose_name='current_liabilities')),
                ('non_current_liabilities', models.FloatField(default=0, help_text='비유동부채', verbose_name='non_current_liabilities')),
                ('total_assets_ratio', models.FloatField(default=0, help_text='유동비율', verbose_name='total_assets_ratio')),
                ('quick_assets_ratio', models.FloatField(default=0, help_text='당좌비율', verbose_name='quick_assets_ratio')),
                ('liabilities_ratio', models.FloatField(default=0, help_text='부채비율', verbose_name='liabilities_ratio')),
                ('total_revenue', models.FloatField(default=0, help_text='매출액', verbose_name='total_revenue')),
                ('gross_profit', models.FloatField(default=0, help_text='매출총이익', verbose_name='gross_profit')),
                ('operating_income', models.FloatField(default=0, help_text='영업이익', verbose_name='operating_income')),
                ('net_income', models.FloatField(default=0, help_text='순이익', verbose_name='net_income')),
                ('total_revenue_ratio', models.FloatField(default=0, help_text='매출이익률', verbose_name='total_revenue_ratio')),
                ('operating_income_ratio', models.FloatField(default=0, help_text='영업이익률', verbose_name='operating_income_ratio')),
                ('net_income_ratio', models.FloatField(default=0, help_text='순이익률', verbose_name='net_income_ratio')),
                ('operating_cash_flow', models.FloatField(default=0, help_text='영업현금흐름', verbose_name='operating_cash_flow')),
                ('date', models.DateField(default=datetime.datetime.today, help_text='날짜', verbose_name='date')),
                ('update_dt', models.DateTimeField(auto_now=True, verbose_name='update_dt')),
                ('create_dt', models.DateTimeField(auto_now_add=True, verbose_name='create_dt')),
                ('ticker', models.ForeignKey(db_column='ticker', on_delete=django.db.models.deletion.CASCADE, related_name='stock_information_history', to='api.stock_list')),
            ],
        ),
    ]
